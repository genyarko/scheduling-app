{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:4000/api\",\n  // Ensure the baseURL includes '/api'\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Add a response interceptor for global error handling\napi.interceptors.response.use(response => response,\n// Success: return the response\nerror => {\n  var _error$response;\n  // Handle errors globally\n  console.error(\"API Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// Create a new meeting\nexport const createMeeting = meetingData => api.post(\"/meetings\", meetingData);\n\n// Get all scheduled meetings\nexport const getMeetings = () => api.get(\"/meetings\");\n\n// Cancel a meeting\nexport const cancelMeeting = id => api.delete(`/meetings/${id}`);\n\n// Reschedule a meeting\nexport const rescheduleMeeting = (id, newData) => api.put(`/meetings/${id}`, newData);\n\n// Fetch user availability\nexport const getUserAvailability = userId => api.get(`/users/${userId}/available-slots`);","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","response","use","error","_error$response","console","data","message","Promise","reject","createMeeting","meetingData","post","getMeetings","get","cancelMeeting","id","delete","rescheduleMeeting","newData","put","getUserAvailability","userId"],"sources":["C:/Users/genya/project/front-end/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"http://localhost:4000/api\", // Ensure the baseURL includes '/api'\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\n// Add a response interceptor for global error handling\r\napi.interceptors.response.use(\r\n    (response) => response, // Success: return the response\r\n    (error) => {\r\n        // Handle errors globally\r\n        console.error(\"API Error:\", error.response?.data || error.message);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Create a new meeting\r\nexport const createMeeting = (meetingData) => api.post(\"/meetings\", meetingData);\r\n\r\n// Get all scheduled meetings\r\nexport const getMeetings = () => api.get(\"/meetings\");\r\n\r\n// Cancel a meeting\r\nexport const cancelMeeting = (id) => api.delete(`/meetings/${id}`);\r\n\r\n// Reschedule a meeting\r\nexport const rescheduleMeeting = (id, newData) => api.put(`/meetings/${id}`, newData);\r\n\r\n// Fetch user availability\r\nexport const getUserAvailability = (userId) => api.get(`/users/${userId}/available-slots`);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CACxBD,QAAQ,IAAKA,QAAQ;AAAE;AACvBE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACP;EACAC,OAAO,CAACF,KAAK,CAAC,YAAY,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBE,IAAI,KAAIH,KAAK,CAACI,OAAO,CAAC;EAClE,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACA,OAAO,MAAMO,aAAa,GAAIC,WAAW,IAAKf,GAAG,CAACgB,IAAI,CAAC,WAAW,EAAED,WAAW,CAAC;;AAEhF;AACA,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,WAAW,CAAC;;AAErD;AACA,OAAO,MAAMC,aAAa,GAAIC,EAAE,IAAKpB,GAAG,CAACqB,MAAM,CAAC,aAAaD,EAAE,EAAE,CAAC;;AAElE;AACA,OAAO,MAAME,iBAAiB,GAAGA,CAACF,EAAE,EAAEG,OAAO,KAAKvB,GAAG,CAACwB,GAAG,CAAC,aAAaJ,EAAE,EAAE,EAAEG,OAAO,CAAC;;AAErF;AACA,OAAO,MAAME,mBAAmB,GAAIC,MAAM,IAAK1B,GAAG,CAACkB,GAAG,CAAC,UAAUQ,MAAM,kBAAkB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}